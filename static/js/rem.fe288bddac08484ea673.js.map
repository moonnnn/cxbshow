{"version":3,"sources":["webpack:///./src/assets/js/viewport.js"],"names":["window","document","hotcss","viewportEl","querySelector","hotcssEl","dpr","devicePixelRatio","maxWidth","designWidth","hotcssCon","getAttribute","initialDprMatch","match","parseFloat","maxWidthMatch","designWidthMatch","documentElement","setAttribute","scale","content","createElement","head","appendChild","px2rem","px","parseInt","rem2px","rem","mresize","innerWidth","getBoundingClientRect","width","style","fontSize","callback","addEventListener","clearTimeout","tid","setTimeout"],"mappings":"sCACA,SAAWA,EAAQC,GAEjB,aAGA,IAAIC,MAEJ,WAGE,IAAIC,EAAaF,EAASG,cAAc,yBACtCC,EAAWJ,EAASG,cAAc,uBAClCE,EAAMN,EAAOO,kBAAoB,EACjCC,EAAW,IACXC,EAAc,EAKhB,GAHAH,EAAMA,GAAO,EAAI,EAAKA,GAAO,EAAI,EAAI,EAGjCD,EAAU,CACZ,IAAIK,EAAYL,EAASM,aAAa,WACtC,GAAID,EAAW,CACb,IAAIE,EAAkBF,EAAUG,MAAM,0BAClCD,IACFN,EAAMQ,WAAWF,EAAgB,KAEnC,IAAIG,EAAgBL,EAAUG,MAAM,wBAChCE,IACFP,EAAWM,WAAWC,EAAc,KAEtC,IAAIC,EAAmBN,EAAUG,MAAM,2BACnCG,IACFP,EAAcK,WAAWE,EAAiB,MAKhDf,EAASgB,gBAAgBC,aAAa,WAAYZ,GAClDJ,EAAOI,IAAMA,EAEbL,EAASgB,gBAAgBC,aAAa,YAAaV,GACnDN,EAAOM,SAAWA,EAEdC,GACFR,EAASgB,gBAAgBC,aAAa,eAAgBT,GAExDP,EAAOO,YAAcA,EAErB,IAAIU,EAAQ,EAAIb,EACdc,EAAU,qCAAuCD,EAAQ,mBAAqBA,EAAQ,mBAAqBA,EAAQ,qBAEjHhB,EACFA,EAAWe,aAAa,UAAWE,KAEnCjB,EAAaF,EAASoB,cAAc,SACzBH,aAAa,OAAQ,YAChCf,EAAWe,aAAa,UAAWE,GACnCnB,EAASqB,KAAKC,YAAYpB,IAlD9B,GAuDAD,EAAOsB,OAAS,SAAUC,EAAIhB,GAQ5B,OANKA,IAGHA,EAAciB,SAASxB,EAAOO,YAAa,KAGnB,IAAnBiB,SAASD,EAAI,IAAYhB,EAAc,IAGhDP,EAAOyB,OAAS,SAAUC,EAAKnB,GAM7B,OAJKA,IACHA,EAAciB,SAASxB,EAAOO,YAAa,KAGhC,GAANmB,EAAWnB,EAAc,KAGlCP,EAAO2B,QAAU,WAEf,IAAIC,EAAa7B,EAASgB,gBAAgBc,wBAAwBC,OAAShC,EAAO8B,WAMlF,GAJI5B,EAAOM,UAAasB,EAAa5B,EAAOI,IAAMJ,EAAOM,WACvDsB,EAAa5B,EAAOM,SAAWN,EAAOI,MAGnCwB,EAAc,OAAO,EAE1B7B,EAASgB,gBAAgBgB,MAAMC,SAAyB,GAAbJ,EAAkB,IAAO,KAEpE5B,EAAOiC,UAAYjC,EAAOiC,YAI5BjC,EAAO2B,UAGP7B,EAAOoC,iBAAiB,SAAU,WAChCC,aAAanC,EAAOoC,KACpBpC,EAAOoC,IAAMC,WAAWrC,EAAO2B,QAAS,MACvC,GAGH7B,EAAOoC,iBAAiB,OAAQlC,EAAO2B,SAAS,GAIhDU,WAAW,WACTrC,EAAO2B,WAEN,KAEH7B,EAAOE,OAASA,EApHlB,CAwHGF,OAAQC","file":"static/js/rem.fe288bddac08484ea673.js","sourcesContent":["/* eslint-disable */\n(function (window, document) {\n\n  'use strict';\n\n  //给hotcss开辟个命名空间，别问我为什么，我要给你准备你会用到的方法，免得用到的时候还要自己写。\n  var hotcss = {};\n\n  (function () {\n    //根据devicePixelRatio自定计算scale\n    //可以有效解决移动端1px这个世纪难题。\n    var viewportEl = document.querySelector('meta[name=\"viewport\"]'),\n      hotcssEl = document.querySelector('meta[name=\"hotcss\"]'),\n      dpr = window.devicePixelRatio || 1,\n      maxWidth = 540,\n      designWidth = 0;\n\n    dpr = dpr >= 3 ? 3 : (dpr >= 2 ? 2 : 1);\n\n    //允许通过自定义name为hotcss的meta头，通过initial-dpr来强制定义页面缩放\n    if (hotcssEl) {\n      var hotcssCon = hotcssEl.getAttribute('content');\n      if (hotcssCon) {\n        var initialDprMatch = hotcssCon.match(/initial\\-dpr=([\\d\\.]+)/);\n        if (initialDprMatch) {\n          dpr = parseFloat(initialDprMatch[1]);\n        }\n        var maxWidthMatch = hotcssCon.match(/max\\-width=([\\d\\.]+)/);\n        if (maxWidthMatch) {\n          maxWidth = parseFloat(maxWidthMatch[1]);\n        }\n        var designWidthMatch = hotcssCon.match(/design\\-width=([\\d\\.]+)/);\n        if (designWidthMatch) {\n          designWidth = parseFloat(designWidthMatch[1]);\n        }\n      }\n    }\n\n    document.documentElement.setAttribute('data-dpr', dpr);\n    hotcss.dpr = dpr;\n\n    document.documentElement.setAttribute('max-width', maxWidth);\n    hotcss.maxWidth = maxWidth;\n\n    if (designWidth) {\n      document.documentElement.setAttribute('design-width', designWidth);\n    }\n    hotcss.designWidth = designWidth; // 保证px2rem 和 rem2px 不传第二个参数时, 获取hotcss.designWidth是undefined导致的NaN\n\n    var scale = 1 / dpr,\n      content = 'width=device-width, initial-scale=' + scale + ', minimum-scale=' + scale + ', maximum-scale=' + scale + ', user-scalable=no';\n\n    if (viewportEl) {\n      viewportEl.setAttribute('content', content);\n    } else {\n      viewportEl = document.createElement('meta');\n      viewportEl.setAttribute('name', 'viewport');\n      viewportEl.setAttribute('content', content);\n      document.head.appendChild(viewportEl);\n    }\n\n  })();\n\n  hotcss.px2rem = function (px, designWidth) {\n    //预判你将会在JS中用到尺寸，特提供一个方法助你在JS中将px转为rem。就是这么贴心。\n    if (!designWidth) {\n      //如果你在JS中大量用到此方法，建议直接定义 hotcss.designWidth 来定义设计图尺寸;\n      //否则可以在第二个参数告诉我你的设计图是多大。\n      designWidth = parseInt(hotcss.designWidth, 10);\n    }\n\n    return parseInt(px, 10) * 320 / designWidth / 20;\n  }\n\n  hotcss.rem2px = function (rem, designWidth) {\n    //新增一个rem2px的方法。用法和px2rem一致。\n    if (!designWidth) {\n      designWidth = parseInt(hotcss.designWidth, 10);\n    }\n    //rem可能为小数，这里不再做处理了\n    return rem * 20 * designWidth / 320;\n  }\n\n  hotcss.mresize = function () {\n    //对，这个就是核心方法了，给HTML设置font-size。\n    var innerWidth = document.documentElement.getBoundingClientRect().width || window.innerWidth;\n\n    if (hotcss.maxWidth && (innerWidth / hotcss.dpr > hotcss.maxWidth)) {\n      innerWidth = hotcss.maxWidth * hotcss.dpr;\n    }\n\n    if (!innerWidth) { return false; }\n\n    document.documentElement.style.fontSize = (innerWidth * 20 / 320) + 'px';\n\n    hotcss.callback && hotcss.callback();\n\n  };\n\n  hotcss.mresize();\n  //直接调用一次\n\n  window.addEventListener('resize', function () {\n    clearTimeout(hotcss.tid);\n    hotcss.tid = setTimeout(hotcss.mresize, 33);\n  }, false);\n  //绑定resize的时候调用\n\n  window.addEventListener('load', hotcss.mresize, false);\n  //防止不明原因的bug。load之后再调用一次。\n\n\n  setTimeout(function () {\n    hotcss.mresize();\n    //防止某些机型怪异现象，异步再调用一次\n  }, 333)\n\n  window.hotcss = hotcss;\n  //命名空间暴露给你，控制权交给你，想怎么调怎么调。\n\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/viewport.js"],"sourceRoot":""}